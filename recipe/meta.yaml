{% set name = "fast-histogram" %}
{% set version = "0.14" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('-', '_')}}-{{ version }}.tar.gz
  sha256: 390973b98af22bda85c29dcf6f008ba0d626321e9bd3f5a9d7a43e5690ea69ea

build:
  number: 0
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  skip: True  #[py<39]

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - python
    - wheel
    - setuptools
    - setuptools_scm
    - pip
    - numpy {{ numpy }}
  run:
    - python
    - numpy

test:
  imports:
    - fast_histogram
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    # https://github.com/astrofrog/fast-histogram/issues/92
    # > raise ValueError(
    #       f'Too many bins for data range. Cannot create {n_equal_bins} '
    #       f'finite-sized bins.')
    # E ValueError: Too many bins for data range. Cannot create 2 finite-sized bins.
    - pytest --pyargs fast_histogram --hypothesis-show-statistics -k "not (test_1d_compare_with_numpy)"
  requires:
    - pip
    - pytest
    - hypothesis

about:
  home: https://github.com/astrofrog/fast-histogram
  license: BSD-2-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Fast 1D and 2D histogram functions in Python
  description: |
    Sometimes you just want to compute simple 1D or 2D histograms with regular bins. Fast. No nonsense. Numpy’s
    histogram functions are versatile, and can handle for example non-regular binning, but this versatility comes at the
    expense of performance.

    The fast-histogram mini-package aims to provide simple and fast histogram functions for regular bins that don’t
    compromise on performance. It doesn’t do anything complicated - it just implements a simple histogram algorithm in
    C and keeps it simple. The aim is to have functions that are fast but also robust and reliable. The result is a 1D
    histogram function here that is 7-15x faster than numpy.histogram, and a 2D histogram function that is 20-25x faster
    than numpy.histogram2d.
  doc_url: https://github.com/astrofrog/fast-histogram/blob/main/README.rst
  dev_url: https://github.com/astrofrog/fast-histogram

extra:
  recipe-maintainers:
    - astrofrog-conda-forge
